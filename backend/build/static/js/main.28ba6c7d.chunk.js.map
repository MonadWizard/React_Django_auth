{"version":3,"sources":["containers/Home.js","actions/types.js","containers/Login.js","actions/auth.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","App.js","index.js"],"names":["Home","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","connect","login","email","password","dispatch","a","config","headers","body","JSON","stringify","axios","post","process","res","type","payload","data","localStorage","getItem","Authorization","Accept","get","useState","formData","setFormData","onChange","e","target","name","value","className","onSubmit","preventDefault","placeholder","required","minLength","to","Signup","Activate","ResetPassword","ResetPasswordConfirm","initialState","access","refresh","isAuthenticated","user","combineReducers","auth","state","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","Navbar","Layout","props","children","App","exact","path","component","Login","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ba6c7d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return <div>Home</div>\n}\n\nexport default Home\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS'\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL'\n","import React, {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {login} from '../actions/auth'  \n\nconst Login = ({ login }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    })\n\n    const { email, password } = formData\n    const onChange = (e) =>\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        login(email, password)\n    }\n\n    // Is the user authenticated?\n    // Redirect them to the home page\n\n    return (\n        <div className=\"container mt-5\">\n            <h1>Sign In</h1>\n            <p> Sign into your Account </p>\n            <form onSubmit={(e) => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"email\"\n                        placeholder=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        onChange={(e) => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={(e) => onChange(e)}\n                        minLength=\"6\"\n                        required\n                    />\n                </div>\n\n                <button className=\"btn btn-primary\" type=\"submit\">\n                    Login\n                </button>\n            </form>\n\n            <p>\n                forget your password ! <Link to=\"/reset-password\"> Reset Password</Link>\n            </p>\n            <p>\n                Don't have an account ! <Link to=\"/signup\"> Sign up</Link>\n            </p>\n        </div>\n    )\n}\n\n// const mapStateToProps = state => ({\n//     // is authenticated?\n// })\n\nexport default connect(null,{ login })(Login)\n","import axios from 'axios'\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n} from './types'\n\nexport const load_user = () => async (dispatch) => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `JWT ${localStorage.getItem('access')}`,\n                Accept: 'application/json',\n            },\n        }\n\n        try {\n            const res = await axios.get(\n                `${process.env.REACT_APP_API_URL}/auth/users/me/`,\n                config\n            )\n\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data,\n            })\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL,\n            })\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL,\n        })\n    }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    }\n\n    const body = JSON.stringify({ email, password })\n\n    try {\n        const res = await axios.post(\n            `${process.env.REACT_APP_API_URL}/auth/jwt/create/`,\n            body,\n            config\n        )\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data,\n        })\n\n        dispatch(load_user())\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL,\n        })\n    }\n}\n","import React from 'react'\n\nconst Signup = () => {\n    return <div>Sign up</div>\n}\n\nexport default Signup\n","import React from 'react'\n\nconst Activate = () => {\n    return <div>Activate</div>\n}\n\nexport default Activate\n","import React from 'react'\n\nconst ResetPassword = () => {\n    return <div>ResetPassword</div>\n}\n\nexport default ResetPassword\n","import React from 'react'\n\nconst ResetPasswordConfirm = () => {\n    return <div>ResetPasswordConfirm</div>\n}\n\nexport default ResetPasswordConfirm\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n} from '../actions/types'\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null,\n}\n\nexport default function (state = initialState, action) {\n    const { type, payload } = action\n\n    switch (type) {\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access)\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n            }\n\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload,\n            }\n\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null,\n            }\n        case LOGIN_FAIL:\n            localStorage.removeItem('access')\n            localStorage.removeItem('refresh')\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null,\n            }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\nimport auth from './auth'\n\nexport default combineReducers({\n    auth,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import React from 'react'\n\nconst Navbar = () => {\n    return <div>Navbar</div>\n}\n\nexport default Navbar\n","import React from 'react'\nimport Navbar from '../components/Navbar.js'\n\nconst Layout = (props) => {\n    return (\n        <div>\n            <Navbar />\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Home from './containers/Home'\nimport Login from './containers/Login'\nimport Signup from './containers/Signup'\nimport Activate from './containers/Activate'\nimport ResetPassword from './containers/ResetPassword'\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport Layout from './hocs/Layout'\n\nconst App = () => {\n    return (\n        <Provider store={store}>\n            <Router>\n                <Layout>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Route exact path=\"/signup\" component={Signup} />\n                        <Route\n                            exact\n                            path=\"/reset-password\"\n                            component={ResetPassword}\n                        />\n                        <Route\n                            exact\n                            path=\"/password/reset/confirm/:uid/:token\"\n                            component={ResetPasswordConfirm}\n                        />\n                        <Route\n                            exact\n                            path=\"/activate/:uid/:token\"\n                            component={Activate}\n                        />\n                    </Switch>\n                </Layout>\n            </Router>\n        </Provider>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}